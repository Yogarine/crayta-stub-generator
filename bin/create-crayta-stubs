#!/usr/bin/env php
<?php

declare(strict_types=1);

use Yogarine\CraytaStubs\CraytaStubGenerator;

// Make sure this script also works when run from the vendor dir.
if (file_exists(__DIR__ . '/../../../autoload.php')) {
    /** @noinspection PhpIncludeInspection */
    require_once __DIR__ . '/../../../autoload.php';
} else {
    require_once __DIR__ . '/../vendor/autoload.php';
}

$copy_static_stubs = null;

$options = getopt(
    'hsS',
    [
        'help',
        'static-stubs',
        'skip-static-stubs',
    ],
    $rest_index
);

foreach ($options as $option => $value) {
    switch ($option) {
        case 'static-stubs':
        case 's':
            $copy_static_stubs = true;
            break;

        case 'skip-static-stubs':
        case 'S':
            $copy_static_stubs = false;
            break;

        case 'help':
        case 'h':
        default:
            print_usage();
            exit(0);
    }
}

$craytaStubGenerator = new CraytaStubGenerator();

$cwd = getcwd();

// If we're running in the project dir, use the dev output dir as target.
if (null === $copy_static_stubs && dirname(__DIR__) === $cwd) {
    $target_dir        = CraytaStubGenerator::getDevStubsDir('crayta');
    $copy_static_stubs = false;
} else {
    $target_dir = implode(DIRECTORY_SEPARATOR, [$cwd, 'stubs', 'crayta']);
}
$target_dir_dir = dirname($target_dir);

// Sanity check to prevent overriding our static stubs dir.
if (dirname(CraytaStubGenerator::getStaticStubsDir(), 2) === $target_dir_dir) {
    $copy_static_stubs = false;
}

if ($copy_static_stubs ?? true) {
    echo "Copying static Crayta stubs to '{$target_dir}'...";
    $craytaStubGenerator->copyStaticStubs($target_dir);
    echo " Done!" . PHP_EOL;
} else {
    echo "NOT copying static stubs to not taint our stubs directory." . PHP_EOL;
}

echo "Generating Crayta stubs in {$target_dir}...";
try {
    $craytaStubGenerator->generateStubs($target_dir);
} catch (RuntimeException $e) {
    echo " Failed:" . PHP_EOL;
    fwrite(STDERR, $e->getMessage() . PHP_EOL);

    exit(1);
}
echo " Done!" . PHP_EOL;

/**
 * @return void
 */
function print_usage()
{
    global $argv;

    echo "Usage:  {$argv[0]} [--static-stubs] [--skip-static-stubs]" . PHP_EOL
        . "        {$argv[0]} --help" . PHP_EOL
        . PHP_EOL
        . "  -s --static-stubs             Copy static stubs normally" . PHP_EOL
        . "  -S --skip-static-stubs        Skip copying static stubs" . PHP_EOL
        . "  -h --help                     Show this help text" . PHP_EOL
        . PHP_EOL;
}
